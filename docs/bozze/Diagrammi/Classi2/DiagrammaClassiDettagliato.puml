@startuml

package rubrica {
class App {
  + App():
  - root: Parent
  - scene: Scene
  + start(Stage): void
  + main(String[]): void
}
}

package controllers {
 abstract class AbstractController {
  + AbstractController():
  - listaContatti: ObservableList<ContattoEsteso>
  - rubrica: Rubrica
  + setRubrica(Rubrica): void
  + mostraDialog(AlertType, String, String): void
  + getRubrica(): Rubrica
  + getListaContatti(): ObservableList<ContattoEsteso>
  + setListaContatti(ObservableList<ContattoEsteso>): void
}

class CreaContattoController {
  + CreaContattoController():
  - email2: TextField
  - telefono: TextField
  - email3: TextField
  - immagine: ImageView
  - aggiungiEmail: Button
  - compleanno: DatePicker
  - fileChooser: FileChooser
  - email: TextField
  - telefono3: TextField
  - pulsanteCrea: Button
  - bottone_imm: Button
  - cognome: TextField
  - indirizzo: TextField
  - aggiungiTelefono: Button
  - nome: TextField
  - note: TextField
  - telefono2: TextField
  - sitoWeb: TextField
  ~ handleAggiungiImmagine(ActionEvent): void
  + handleAggiungiContatto(ActionEvent): void
  + initialize(URL, ResourceBundle): void
  + controllaEmail(String): Boolean
  + controllaTelefono(String): Boolean
  - controllaCampiObbligatori(String, String): Boolean
}
class RubricaController {
  + RubricaController():
  - cognomeClm: TableColumn<ContattoEsteso, String>
  - preferitiFlag: Button
  - indirizzoField: TextField
  - importBtn: MenuItem
  - pulsanteElimina: Button
  - editBtn: MenuItem
  - compleannoField: DatePicker
  - linkField: TextField
  - pulsanteCerca: TextField
  - splitPane: SplitPane
  - pulsanteCrea: Button
  - showRubrica: MenuItem
  - contattoSelezionato: ContattoEsteso
  - contattiFiltratiPreferiti: FilteredList<ContattoEsteso>
  - nomeClm: TableColumn<ContattoEsteso, String>
  - nomeField: TextField
  - pulsanteModifica: Button
  - helpBtn: MenuItem
  - emergenzaBtn: MenuItem
  - fullname: Label
  - preferitiBtn: MenuItem
  - noteField: TextField
  - favoritesBtn: Label
  - rubricaTable: TableView<ContattoEsteso>
  - emergenzaFlag: Button
  - filteredContatti: FilteredList<ContattoEsteso>
  - email1Field: TextField
  - email3Field: TextField
  - pulsanteSalva: Button
  - showEmergenza: MenuItem
  - cognomeField: TextField
  - imgcontatto: ImageView
  - exportBtn: MenuItem
  - telefono1Field: TextField
  - del: MenuItem
  - contattiFiltratiEmergenza: FilteredList<ContattoEsteso>
  - telefono2Field: TextField
  - telefono3Field: TextField
  - email2Field: TextField
  - openWebpage(String): void
  - toggleEmergenza(): void
  - exportRubrica(): void
  - showPreferiti(): void
  + exportContatto(): void
  - setEditableAll(boolean): void
  + importRubrica(): void
  + handleEliminaContatto(ActionEvent): void
  - filtraContatti(String): void
  - mostraDettaglioContatti(ContattoEsteso): void
  - gestioneSalvaModifiche(ActionEvent): void
  + handleNuovoContatto(ActionEvent): void
  - showEmergenza(): void
  - togglePreferiti(): void
  - openGit(): void
  + handleModificaContatto(ActionEvent): void
  - showRubrica(): void
  + initialize(URL, ResourceBundle): void
}
}

package models {
class Contatto {
  + Contatto():
  + Contatto(String, String, String, String, String, Boolean, Boolean):
  - cognome: String
  - preferito: Boolean
  - telefono3: String
  - nome: String
  - telefono2: String
  - telefono1: String
  - emergenza: Boolean
  - id: Integer
  + setTelefono3(String): void
  + setId(Integer): void
  + getTelefono2(): String
  + toString(): String
  + setTelefono2(String): void
  + getNome(): String
  + isEmergenza(): BooleanProperty
  + getTelefono3(): String
  + setNome(String): void
  + setCognome(String): void
  + setTelefono1(String): void
  + getEmergenza(): Boolean
  + hashCode(): int
  + getId(): Integer
  + getPreferito(): Boolean
  + setPreferito(Boolean): void
  + getCognome(): String
  + getTelefono1(): String
  + setEmergenza(Boolean): void
  + equals(Object): boolean
  + isPreferito(): BooleanProperty
}
class ContattoEsteso {
  + ContattoEsteso(String, String, String, String, String, String, String, String, LocalDate, String, String, String, Boolean, Boolean):
  + ContattoEsteso():
  - email3: String
  - email2: String
  - email1: String
  - indirizzoResidenza: String
  - sitoWeb: String
  - compleanno: LocalDate
  - note: String
  + setIndirizzoResidenza(String): void
  + setEmail3(String): void
  + toString(): String
  + setNote(String): void
  + getEmail2(): String
  + setCompleanno(LocalDate): void
  + hashCode(): int
  + getSitoWeb(): String
  + getEmail3(): String
  + getNote(): String
  - generaId(): Integer
  + setSitoWeb(String): void
  + getIndirizzoResidenza(): String
  + setEmail2(String): void
  + setEmail1(String): void
  + getEmail1(): String
  + equals(Object): boolean
  + getCompleanno(): LocalDate
}

class Rubrica {
  + Rubrica():
  - rubrica: Map<Integer, ContattoEsteso>
  + ricercaContatto(ContattoEsteso): ContattoEsteso
  + getContatti(): Collection<ContattoEsteso>
  + rimuoviContatto(ContattoEsteso): ContattoEsteso
  + aggiornaContatto(ContattoEsteso): Boolean
  + toString(): String
  + aggiungiContatto(ContattoEsteso): ContattoEsteso
  + aggiungiContattoEVerifica(ContattoEsteso): Boolean
}
}

package gestoreIO {
class Export {
  + Export():
  - path: String
  + getVcard(ContattoEsteso): String
  + esportaRubrica(Rubrica): void
  + esportaContatto(ContattoEsteso): void

}
class Import {
  + Import():
  - path: String
  + importVcard(Rubrica, String): void
}
}

Rubrica    "1" o-- "0..*"   Contatto
Contatto     <|--           ContattoEsteso
AbstractController  <|--   RubricaController
AbstractController  <|--   CreaContattoController
Rubrica -- AbstractController
Import -- RubricaController
Export -- RubricaController
@enduml
