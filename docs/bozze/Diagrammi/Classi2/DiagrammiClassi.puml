@startuml
package Rubrica {
        class App {
            - Scene scene
            - Parent parent
            + {static} main(args: String[])
            + void start(stage: Stage)
        }
    package Controller{
          interface Initializable {
          + initialize(URL url, ResourceBundle rb)
}
          abstract class AbstractController {
    - Rubrica rubrica
    - ObservableList<ContattoEsteso> listaContatti
    + Rubrica getRubrica()
    + setRubrica(rubrica: Rubrica): void
    + getListaContatti(): ObservableList<ContattoEsteso> 
    + setListaContatti(listaContatti: ObservableList<ContattoEsteso>): void
    + void mostraDialog ():void
}
        class RubricaController{
    - ContattoEsteso contattoSelezionato
    - FilteredList<ContattoEsteso> contattiFiltartiPreferiti
    - FilteredList<ContattoEsteso> contattiFiltratiEmergenza
    - TextField nomeField
    - TextField cognomeField
    - TextField telefono1Field
    - TextField telefono2Field
    - TextField telefono3Field
    - TextField email1Field
    - TextField email2Field
    - TextField email3Field
    - DatePicker compleannoField
    - TextField indirizzoField
    - TextField noteField
    - MenuItem emergenzaBtn
    - MenuItem preferitiBtn
    - TextField pulsanteCerca
    - Button pulsanteCrea
    - Button pulsanteElimina
    - Button pulsanteModifica
    - Button pulsanteSalva
    - Label favoritesBtn
    - TableColumn<ContattoEsteso, String> cognomeClm
    - Label fullname
    - ImageView imgcontatto
    - TableColumn<ContattoEsteso, String> nomeClm
    - TableView<ContattoEsteso> rubricaTable
    - SplitPane splitPane
    - Button preferitiFlag
    - Button emergenzaFlag
    - MenuItem del
    - MenuItem showEmergenza
    - MenuItem showRubrica
    - MenuItem editBtn
    - MenuItem helpBtn
    - MenuItem exportBtn
    - MenuItem importBtn
    + initialize(url: URL, rb: ResourceBundle): void
    + handleNuovoContatto(ActionEvent event):void
    - filtraContatti(String c): void
    - mostraDettaglioContatti(contatto: ContattoEsteso): void
    - setEditableAll(isEditable: boolean): void
    + handleEliminaContatto(event: ActionEvent): void
    + handleModificaContatto(event: ActionEvent): void
    + gestioneSalvaModifiche(e: ActionEvent): void
    - showRubrica(): void
    - showPreferiti(): void
    - showEmergenza(): void
    - toggleEmergenza(): void
    - togglePreferiti(): void
    - {static} openWebpage(urlString: String):void
    - openGit(): void
    + importRubrica(): void
    + exportRubrica(): void
    + exportContatto(): void
        }
        class CreaContattoController{
    - Button aggiungiEmail
    - Button aggiungiTelefono
    - Button pulsanteCrea
    - Button bottone_imm
    - TextField nome
    - TextField cognome
    - DatePicker compleanno
    - TextField email
    - TextField email2
    - TextField email3
    - TextField sitoWeb
    - TextField note
    - TextField telefono
    - TextField telefono2
    - TextField telefono3
    - ImageView immagine
    - TextField indirizzo
    - FileChooser fileChooser
    + initialize(url: URL, rb: ResourceBundle): void
    + handleAggiungiImmagine(event: ActionEvent): void
    + handleAggiungiContatto(event: ActionEvent): void
    + controllaCampiObbligatori(nome: String,cognome: String): Boolean
    + controllaTelefono(telefono: String): Boolean
    + controllaEmail(email: String): Boolean
}
RubricaController --|> AbstractController
RubricaController ..|> Initializable
CreaContattoController --|> AbstractController
CreaContattoController..|> Initializable
    }


    package Model{
class Rubrica {
    - rubrica: Map<Integer, ContattoEsteso>
    + Rubrica()
    + aggiungiContatto(): ContattoEsteso
    + aggiungiContattoEVerifica():Boolean
    + rimuoviContatto(): ContattoEsteso
    + ricercaContatto(): ContattoEsteso
    + getContatti(): Collection<ContattoEsteso>
    + aggiornaContatto(ContattoEsteso contattoAggiornato): Boolean
    + toString(): String
}

        class Contatto {
    - Integer id
    - String nome
    - String cognome
    - String telefono1
    - String telefono2
    - String telefono3
    - Boolean emergenza
    - Boolean preferito
    + Contatto(nome: String, cognome: String, telefono1: String, telefono2: String, telefono3: String, preferito:Boolean, emergenza:Boolean)
    + isPreferito(): BooleanProperty 
    + isEmergenza(): BooleanProperty 
    + equals(o: Object): boolean 
    + hashCode(): int
 }

        class ContattoEsteso {
    -  email1: String
    -  email2: String
    -  email3: String
    -  compleanno:LocalDate
    -  indirizzoResidenza: String
    -  sitoWeb: String
    -  note: String
    + ContattoEsteso(nome: String, cognome: String, telefono1: String, telefono2: String, telefono3: String, email1: String, email2: String, email3: String, compleanno: LocalDate, indirizzoResidenza: String, website: String, note: String, preferito: Boolean, emergenza: Boolean)
 }
        Contatto <|-- ContattoEsteso
Rubrica o-- Contatto
    }

  package Eccezioni {
    class ContattoAssenteException{
      + ContattoAssenteException()
    }
    class ContattoDuplicatoException{
      + ContattoDuplicatoException()
    }
    class ExportFileException{
      + ExportFileException()
    }
    class ImportFileException{
      + ImportFileException()
    }
    class FormatoFileNonValidoException{
        + FormatoFileNonValidoException()
    }
    class FileInesistenteException{
        + FileInesistenteException()
    }
  }
  package gestoreIO{
    class Export{
      + getVcard(c: ContattoEsteso): String
      + esportsRubrica(r: Rubrica): void
      + esportaContatto(contatto: ContattoEsteso)
    }
    class Import{
      + importRubrica(r: Rubrica, nomefile: String): void
      + importaContatto(contatto: ContattoEsteso, nomefile: String): void
    }
  }
}
@enduml